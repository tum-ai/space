name: Development - Deploy API to tumai server

on:
  push:
    branches:
      - dev
  workflow_dispatch:

env:
  ENVIRON: staging
  FIREBASE_ADMINSDK_CERTIFICATE: ${{ secrets.FIREBASE_ADMINSDK_CERTIFICATE_STAGING }}
  API_PORT: 8001
  # [database environment]
  DB_HOST: space.db.staging
  DB_PORT: 5432
  DB_NAME: space-db
  DB_USER: space-db
  DB_PASSWORD: ${{ secrets.SPACE_DB_STAGING_PASSWORD }}
  # [mail environment]
  MAIL_USERNAME: space-staging@tum-ai.com
  MAIL_PASSWORD: ${{ secrets.GMAIL_APP_PASSWORD_STAGING }}
  MAIL_FROM: space-staging@tum-ai.com
  MAIL_PORT: 587
  MAIL_SERVER: smtp.gmail.com
  MAIL_FROM_NAME: TUM.ai Space Team (STAGING)
  # [deployment server]
  SSH_SERVER_HOST: ${{ vars.SSH_SERVER_HOST }}
  SSH_SERVER_USER: ${{ vars.SSH_SERVER_USER }}
  SSH_SERVER_GHA_PRIVATE_KEY:  ${{ secrets.SSH_SERVER_GHA_PRIVATE_KEY }}

jobs:
  deploy-staging:
    name: Staging root-server deployment
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v3
      - uses: mamba-org/setup-micromamba@5b9dc5cf9560f2808ade896803b2f68cfcfdd52b
        with:
          environment-file: api/environment.yml
          init-shell: bash
      - name: Lint with Ruff
        run: python -m ruff check .
        working-directory: api
      - name: Run mypy
        run: python -m mypy .
        working-directory: api
      - name: Run pytest
        run: python -m pytest tests
        working-directory: api
      - name: force pull branch, and run Docker Compose
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.SSH_SERVER_HOST }}
          username: ${{ env.SSH_SERVER_USER }}
          key: ${{ secrets.SSH_SERVER_GHA_PRIVATE_KEY }}
          port: 22
          script: |
            # add github to known hosts
            rm -rf ~/.ssh/known_hosts
            ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
            chmod 600 ~/.ssh/known_hosts

            # pull repo
            cd /apps/tumai/space-staging
            ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
            git checkout dev
            git pull --force
            cd api/

            # ENV VARIABLES NEEDED FOR BUILD
            export ENVIRON="${{ env.ENVIRON }}"

            # ENV VARIABLES NEEDED FOR RUN
            export API_PORT="${{ env.API_PORT }}"
                        
            # [database environment]
            export DB_HOST="${{ env.DB_HOST }}"
            export DB_PORT="${{ env.DB_PORT }}"
            export DB_NAME="${{ env.DB_NAME }}"
            export DB_USER="${{ env.DB_USER }}"
            export DB_PASSWORD="${{ env.DB_PASSWORD }}"

            # [mail environment]
            export MAIL_USERNAME="${{ env.MAIL_USERNAME }}"
            export MAIL_PASSWORD="${{ env.MAIL_PASSWORD }}"
            export MAIL_FROM="${{ env.MAIL_FROM }}"
            export MAIL_PORT="${{ env.MAIL_PORT }}"
            export MAIL_SERVER="${{ env.MAIL_SERVER }}"
            export MAIL_FROM_NAME="${{ env.MAIL_FROM_NAME }}"

            docker-compose build --no-cache
            docker-compose -p tum-ai-space-api-staging down --remove-orphans
            docker-compose -p tum-ai-space-api-staging up -d --remove-orphans

